{"ast":null,"code":"var _jsxFileName = \"/media/allen/SIMBAD/Flaskprojects/Preschool/design/preschool/Instructor_Teacher_Frontend/wap/src/AddVideo.js\";\nimport React from 'react';\nimport './Addvideo.css';\n\nclass AddVideo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.titlehandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.video_url_handler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.coverphoto_handler = e => {\n      this.setState({\n        coverphoto: e.target.files[0]\n      });\n    };\n\n    this.addvideo = id => {\n      const data = new FormData();\n      data.append(\"coverphoto\", this.state.coverphoto);\n      data.append(\"title\", this.state.title);\n      data.append(\"video_url\", this.state.video_url);\n\n      if (this.state.coverphoto == null) {\n        this.setState({\n          coverphoto_err: \"Coverphoto Required\"\n        });\n      } else if (this.state.title.trim() == \"\") {\n        this.setState({\n          title_err: \"Video Title required\"\n        });\n      } else if (this.state.video_url.trim() == \"\") {\n        this.setState({\n          video_url_err: \"Video url must not be empty\"\n        });\n      } else {\n        //else we send data to the server\n        fetch(`http://127.0.0.1:5000/add_video/${id}`, {\n          method: \"POST\",\n          body: data,\n          headers: {\n            Authorization: `${localStorage.getItem(\"token\")}`\n          }\n        }).then(res => res.json()).then(data => {\n          alert(\"Video uploaded\");\n        }).catch(err => {\n          alert(\"No Network\");\n        });\n      }\n    };\n\n    this.deletevideo = id => {\n      fetch(`http://127.0.0.1:5000/videos_delete/${id}`, {\n        method: \"DELETE\"\n      }).then(res => res.json()).then(data => {\n        console.log(data.message);\n        let postlist = this.state.post_comments;\n\n        for (let i = 0; i < postlist.length; i++) {\n          let p = postlist[i];\n\n          if (p._id === id) {\n            postlist.splice(i, 1);\n            break;\n          }\n        }\n\n        this.setState({\n          post: postlist\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.state = {\n      course: [],\n      video_url: \"\",\n      title: \"\",\n      coverphoto: null,\n      loading: false,\n      coverphoto_err: \"\",\n      title_err: \"\",\n      video_url_err: \"\"\n    };\n  }\n\n  componentDidMount() {\n    /*For fetching videos under a particular course\n    So the the courses.id is grabbed from the course\n    */\n    fetch(`http://127.0.0.1:5000/add_video/${this.props.match.params.id}`, {\n      method: \"GET\"\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        course: data.course\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row add-pdf-background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 14\n      }\n    }, this.state.course.map(t => {\n      const id = {\n        t\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginTop: 100,\n          paddingBottom: 30\n        },\n        className: \"form-container \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 18\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          flexDirection: \"row\"\n        },\n        className: \"col text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        style: {\n          marginTop: 10,\n          textAlign: \"center\",\n          fontSize: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 10\n        }\n      }, \"Video title/topic\"), /*#__PURE__*/React.createElement(\"input\", {\n        value: this.state.title,\n        style: {\n          width: 200\n        },\n        onChange: this.titlehandler,\n        type: \"text\",\n        name: \"title\",\n        className: \"courseinput\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 10\n        }\n      }), /*#__PURE__*/React.createElement(\"h3\", {\n        style: {\n          color: \"red\",\n          fontSize: 16\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 10\n        }\n      }, this.state.title_err)), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          flexDirection: \"row\"\n        },\n        className: \"col text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        style: {\n          marginTop: 10,\n          textAlign: \"center\",\n          fontSize: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 10\n        }\n      }, \"Course Video Link/URL\"), /*#__PURE__*/React.createElement(\"input\", {\n        value: this.state.video_url,\n        style: {\n          width: 200\n        },\n        onChange: this.video_url_handler,\n        type: \"text\",\n        name: \"video_url\",\n        className: \"courseinput\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 10\n        }\n      }), /*#__PURE__*/React.createElement(\"h3\", {\n        style: {\n          color: \"red\",\n          fontSize: 16\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 10\n        }\n      }, this.state.video_url_err)), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          flexDirection: \"row\"\n        },\n        className: \"col text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        style: {\n          marginTop: 10,\n          textAlign: \"center\",\n          fontSize: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 10\n        }\n      }, \"Video Coverphoto\"), /*#__PURE__*/React.createElement(\"input\", {\n        style: {\n          width: 200\n        },\n        onChange: this.coverphoto_handler,\n        type: \"file\",\n        name: \"post_media\",\n        className: \"inputfile1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 10\n        }\n      }), /*#__PURE__*/React.createElement(\"h3\", {\n        style: {\n          color: \"red\",\n          fontSize: 16\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 10\n        }\n      }, this.state.coverphoto_err)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Post\",\n        onClick: () => this.addvideo(t.id),\n        style: {\n          width: 200\n        },\n        className: \"formbutton\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 19\n        }\n      })));\n    }));\n  }\n\n}\n\nexport default AddVideo;","map":{"version":3,"sources":["/media/allen/SIMBAD/Flaskprojects/Preschool/design/preschool/Instructor_Teacher_Frontend/wap/src/AddVideo.js"],"names":["React","AddVideo","Component","constructor","props","titlehandler","e","setState","target","name","value","video_url_handler","coverphoto_handler","coverphoto","files","addvideo","id","data","FormData","append","state","title","video_url","coverphoto_err","trim","title_err","video_url_err","fetch","method","body","headers","Authorization","localStorage","getItem","then","res","json","alert","catch","err","deletevideo","console","log","message","postlist","post_comments","i","length","p","_id","splice","post","course","loading","componentDidMount","match","params","render","map","t","marginTop","paddingBottom","flexDirection","textAlign","fontSize","width","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Addvideo.css';\n\n\nclass AddVideo extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            course:[],\n            video_url:\"\",\n            title:\"\",\n            coverphoto:null,\n            loading:false,\n            coverphoto_err:\"\",\n            title_err:\"\",\n            video_url_err:\"\"\n        }\n    }\n\n\n    componentDidMount(){\n        /*For fetching videos under a particular course\n        So the the courses.id is grabbed from the course\n        */\n         fetch(`http://127.0.0.1:5000/add_video/${this.props.match.params.id}`,\n \n   {\n     method:\"GET\",\n \n    \n }\n )\n .then(res=>res.json())\n .then(data=>{\n     this.setState({\n        course:data.course\n     })\n \n    \n })\n .catch(err=>console.log(err))\n     }\n \n \n\n\ntitlehandler=(e)=>{\nthis.setState({\n    [e.target.name]:e.target.value\n})\n}\n\n\nvideo_url_handler=(e)=>{\n    this.setState({\n        [e.target.name]:e.target.value\n    })\n}\n\n\ncoverphoto_handler=(e)=>{\n    this.setState({\n        coverphoto:e.target.files[0]\n    })\n}\n\n\n\n\n\n \n  \n     addvideo=(id)=>{\n         const data=new FormData();\n         data.append(\"coverphoto\",this.state.coverphoto)\n         data.append(\"title\",this.state.title)\n         data.append(\"video_url\",this.state.video_url)\n\n        if(this.state.coverphoto==null){\n            this.setState({\n                coverphoto_err:\"Coverphoto Required\"\n            })\n        }\n        else if(this.state.title.trim()==\"\"){\n            this.setState({\n                title_err:\"Video Title required\"\n            })\n        }\n        else if(this.state.video_url.trim()==\"\")\n        {\n            this.setState({\n                video_url_err:\"Video url must not be empty\"\n            })\n        }\n        else{\n           //else we send data to the server\n \n         fetch(`http://127.0.0.1:5000/add_video/${id}`,\n         {\n             method:\"POST\",\n             body:data,\n             headers:{\n              Authorization: `${localStorage.getItem(\"token\")}`\n          },\n         }\n \n         )\n         .then(res=>res.json())\n         .then(data=>{\n             alert(\"Video uploaded\")\n          })\n         .catch(err=>{\n             alert(\"No Network\")\n         })\n        }\n        }\n     \n \n \n \n \n \n     deletevideo=(id)=>{\n      \n      fetch(`http://127.0.0.1:5000/videos_delete/${id}`,\n     \n  \n      {\n          method:\"DELETE\"\n      }\n      )\n      .then(res=>res.json())\n      .then(data=>{\n          console.log(data.message)\n          let postlist=this.state.post_comments\n          for(let i=0;i<postlist.length;i++){\n              let p=postlist[i]\n              if(p._id===id){\n                  postlist.splice(i,1)\n                  break\n              }\n          }\n          this.setState({post:postlist})\n      })\n      .catch(err=>{console.log(err)})\n      \n  \n  \n    }\n  \n  \n \n \n \n \n \n \n \n     render(){\n         return(\n             <div className=\"row add-pdf-background\">\n        {\n          this.state.course.map(t=>{\n              const id={t}\n              return(\n                 <div style={{marginTop:100,paddingBottom:30}} className=\"form-container \">\n                   \n \n \n                   <div style={{flexDirection:\"row\"}} className=\"col text-center\">\n         <h3 style={{marginTop:10,textAlign:\"center\",fontSize:20}}>Video title/topic</h3>\n         <input  value={this.state.title}  style={{width:200}} onChange={this.titlehandler} type=\"text\" name=\"title\" className=\"courseinput\"/>\n         <h3 style={{color:\"red\",fontSize:16}}>{this.state.title_err}</h3>\n         </div>\n                   \n                   <div style={{flexDirection:\"row\"}} className=\"col text-center\">\n         <h3 style={{marginTop:10,textAlign:\"center\",fontSize:20}}>Course Video Link/URL</h3>\n         <input  value={this.state.video_url}  style={{width:200}} onChange={this.video_url_handler} type=\"text\" name=\"video_url\" className=\"courseinput\"/>\n         <h3 style={{color:\"red\",fontSize:16}}>{this.state.video_url_err}</h3>\n         </div>\n         \n\n         <div style={{flexDirection:\"row\"}} className=\"col text-center\">\n         <h3 style={{marginTop:10,textAlign:\"center\",fontSize:20}}>Video Coverphoto</h3>\n         <input    style={{width:200}} onChange={this.coverphoto_handler} type=\"file\" name=\"post_media\" className=\"inputfile1\"/>\n         <h3 style={{color:\"red\",fontSize:16}}>{this.state.coverphoto_err}</h3>\n         </div>\n\n\n\n                  <div className=\"col text-center\">\n                  <input type=\"submit\" value='Post' onClick={()=>this.addvideo(t.id)} style={{width:200}} className=\"formbutton\"/>\n                  </div>\n                  </div>\n                 \n              )\n \n              \n          })\n        }\n     </div>\n         )\n }\n \n\n\n}\n\nexport default AddVideo;\n\n\n"]},"metadata":{},"sourceType":"module"}