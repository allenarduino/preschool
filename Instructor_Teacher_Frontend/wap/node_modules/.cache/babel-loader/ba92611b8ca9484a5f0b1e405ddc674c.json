{"ast":null,"code":"var _jsxFileName = \"/media/allen/SIMBAD/Flaskprojects/Preschool/design/preschool/Instructor_Teacher_Frontend/wap/src/EditProfile.js\";\n\n/*e.preventDefault() function in any line will prevent\nthe the form from submitting automatically\n*/\nimport React from 'react';\nimport InstructorLogin from './InstructorLogin';\nimport './Editprofile.css';\n\nclass Editprofile extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.filechangehandler = event => {\n      this.setState({\n        instructor_img: event.target.files[0]\n      });\n    };\n\n    this.uploadhandler = e => {\n      e.preventDefault();\n      /*I'm checking to see wether the bio is empty or not\n      If it's  empty, we throw error message*/\n\n      if (this.state.instructor_img == null) {\n        this.setState({\n          imgerr: \"Photo Required\"\n        });\n      } else {\n        //Otherwise we send the image to the server\n        this.setState({\n          loading: true\n        });\n        const formData = new FormData();\n        formData.append(\"instructor_img\", this.state.instructor_img);\n        fetch(\"http://127.0.0.1:5000/instructor_update_profile_img\", {\n          method: \"POST\",\n          body: formData,\n          headers: {\n            Authorization: `${localStorage.getItem(\"instructor_token\")}`\n          }\n        }).then(res => {\n          alert(\"Profile photo updated\");\n          this.setState({\n            loading: false\n          });\n        }).catch(err => {\n          alert(\"Network Error\");\n        });\n      }\n    };\n\n    this.biohandler = e => {\n      e.preventDefault();\n      let name = e.target.name;\n      let value = e.target.value;\n      let errors = this.state.errors;\n      /*I'm using switch \n      statement here because\n       of a reason*/\n\n      switch (name) {\n        case \"bio\":\n          errors.bio = value.length < 90 ? 'Bio must be atleast 90 characters' : '';\n          break;\n      }\n\n      this.setState({\n        errors,\n        [name]: value\n      }, () => {\n        //So that I can see the result in the conssole\n        console.log(errors);\n      });\n    };\n\n    this.submitbio = e => {\n      e.preventDefault();\n      /*I'm checking to see wether the bio is empty or not\n      If it's  empty, we throw error message*/\n\n      if (this.state.bio.trim() === \"\") {\n        this.setState({\n          bioerr: \"Bio Required\"\n        });\n      } else {\n        //Otherwise,we send data to the server\n        fetch(\"http://127.0.0.1:5000/instructor_update_bio\", {\n          method: \"POST\",\n          body: JSON.stringify(this.state.bio),\n          \"Content-type\": \"application/json\",\n          headers: {\n            Authorization: `${localStorage.getItem(\"instructor_token\")}`\n          }\n        }).then(res => res.json()).then(data => {\n          alert(data.message);\n        }).catch(err => {\n          alert(\"No Network\");\n        });\n      }\n    };\n\n    this.namehandler = e => {\n      this.setState({\n        name: e.target.value\n      });\n    };\n\n    this.submitname = e => {\n      e.preventDefault();\n      /*I'm checking to see wether the name is empty or not\n      If it's  empty, we throw error message*/\n\n      if (this.state.name.trim() === \"\") {\n        this.setState({\n          nameerr: \"Name Required\"\n        });\n      } else {\n        //Otherwise we send data to the server for processing\n        this.setState({\n          loading: true\n        });\n        fetch(\"http://127.0.0.1:5000/instructor_update_name\", {\n          method: \"POST\",\n          \"Content-Type\": \"Application/json\",\n          body: JSON.stringify(this.state.name),\n          headers: {\n            Authorization: `${localStorage.getItem(\"instructor_token\")}`\n          }\n        }).then(res => res.json()).then(data => {\n          alert(data.message);\n          this.setState({\n            loading: false\n          });\n        }).catch(err => {\n          console.log(\"No Network\");\n        });\n      }\n    };\n\n    this.state = {\n      instructor_img: null,\n      name: \"\",\n      nameerr: \"\",\n      bioerr: \"\",\n      imgerr: \"\",\n      message: \"\",\n      errors: {\n        //Error from client due to user inputs\n        name: \"\",\n        bio: \"\"\n      },\n      loading: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flexDirection: \"row\"\n      },\n      className: \"col text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        marginTop: 100,\n        textAlign: \"center\",\n        fontSize: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }\n    }, \"Update profile picture\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.filechangehandler,\n      type: \"file\",\n      name: \"instructor_img\",\n      className: \"inputfile1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }\n    }), this.state.loading == false ? /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.uploadhandler,\n      className: \"upload-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 38\n      }\n    }, \"Upload\") : /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.uploadhandler,\n      className: \"upload-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }\n    }, \"Uploading....\"), /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: \"red\",\n        fontSize: 18\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }\n    }, this.state.imgerr)), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flexDirection: \"row\"\n      },\n      className: \"col text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        marginTop: 30,\n        textAlign: \"center\",\n        fontSize: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }\n    }, \"Update name\"), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Name\",\n      value: this.state.name,\n      onChange: this.namehandler,\n      type: \"text\",\n      name: \"name\",\n      className: \"nameinput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }\n    }), this.state.loading == false ? /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.submitname,\n      className: \"namebutton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 38\n      }\n    }, \"Update\") : /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.submitname,\n      className: \"namebutton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }\n    }, \"Updating....\"), /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: \"red\",\n        fontSize: 18\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }\n    }, this.state.nameerr), this.state.errors.name.length > 0 && /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: \"red\",\n        fontSize: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 27\n      }\n    }, this.state.errors.bio)), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flexDirection: \"row\"\n      },\n      className: \"col text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        marginTop: 30,\n        textAlign: \"center\",\n        fontSize: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }\n    }, \"Update Bio\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      required: \"true\",\n      placeholder: \"My Bio\",\n      value: this.state.bio,\n      onChange: this.biohandler,\n      type: \"text\",\n      name: \"bio\",\n      className: \"nameinput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.submitbio,\n      className: \"namebutton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }\n    }, \"Update\"), /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: \"red\",\n        fontSize: 18\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }\n    }, this.state.bioerr), this.state.errors.bio.length > 0 && /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: \"red\",\n        fontSize: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 27\n      }\n    }, this.state.errors.bio)), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flexDirection: \"row\"\n      },\n      className: \"col text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"logoutbutn\",\n      onClick: () => {\n        localStorage.removeItem(\"instructor_token\");\n        this.props.history.push(\"InstructorLogin\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }\n    }, \"Logout Account\")));\n  }\n\n}\n\nexport default Editprofile;","map":{"version":3,"sources":["/media/allen/SIMBAD/Flaskprojects/Preschool/design/preschool/Instructor_Teacher_Frontend/wap/src/EditProfile.js"],"names":["React","InstructorLogin","Editprofile","Component","constructor","props","filechangehandler","event","setState","instructor_img","target","files","uploadhandler","e","preventDefault","state","imgerr","loading","formData","FormData","append","fetch","method","body","headers","Authorization","localStorage","getItem","then","res","alert","catch","err","biohandler","name","value","errors","bio","length","console","log","submitbio","trim","bioerr","JSON","stringify","json","data","message","namehandler","submitname","nameerr","render","flexDirection","marginTop","textAlign","fontSize","color","removeItem","history","push"],"mappings":"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","sourcesContent":["/*e.preventDefault() function in any line will prevent\nthe the form from submitting automatically\n*/\n\n\nimport React from 'react';\nimport InstructorLogin from './InstructorLogin';\nimport './Editprofile.css';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass Editprofile extends React.Component{\n\n   \nconstructor(props){\n    super(props);\n    this.state={\n        instructor_img:null,\n        name:\"\",\n        nameerr:\"\",\n        bioerr:\"\",\n        imgerr:\"\",\n        message:\"\",\n         errors:{//Error from client due to user inputs\n         name:\"\",\n         bio:\"\"\n   },\n        loading:false,\n        \n    }\n}\n\n\n\n\n\n\n\n\n\n\n\nfilechangehandler=(event)=>{\n    this.setState({instructor_img:event.target.files[0]})\n  }\n\n  uploadhandler=(e)=>{\n\n    \n\n   e.preventDefault();\n     /*I'm checking to see wether the bio is empty or not\n    If it's  empty, we throw error message*/\n   if(this.state.instructor_img==null){\n    this.setState({\n        imgerr:\"Photo Required\"\n    })\n}\n   else{\n   //Otherwise we send the image to the server\n    \n   this.setState({\n    loading:true\n})\n\n\n   const formData=new FormData();\n   formData.append(\"instructor_img\",this.state.instructor_img)\n   \n   fetch(\"http://127.0.0.1:5000/instructor_update_profile_img\",\n   {\n     method:\"POST\",\n     body:formData,\n     headers:{\n         Authorization:`${localStorage.getItem(\"instructor_token\")}`\n     }\n\n   }\n   )\n   .then(res=>{\n       alert(\"Profile photo updated\");\n       this.setState({\n           loading:false\n       })\n    })\n   .catch(err=>{alert(\"Network Error\")})\n}\n  }\n\n\n\n\n  \n\nbiohandler=(e)=>{\n    \n\n    e.preventDefault();\n    let name=e.target.name;\n    let value=e.target.value;\n    let errors =this.state.errors;\n    \n    /*I'm using switch \n    statement here because\n     of a reason*/\n\n     switch(name){\n        case \"bio\":\n            errors.bio=value.length<90\n            ?'Bio must be atleast 90 characters':'';\n            break;\n            \n\n     }\n\n    this.setState({errors, [name]: value}, ()=> {\n        //So that I can see the result in the conssole\n        console.log(errors)\n    })\n\n\n\n\n\n\n\n\n\n\n\n\n\n}\n\n\n\nsubmitbio=(e)=>{\n    e.preventDefault();\n    /*I'm checking to see wether the bio is empty or not\n    If it's  empty, we throw error message*/\n    if (this.state.bio.trim()===\"\"){\n        this.setState({\n            bioerr:\"Bio Required\"\n         })\n    }\n    else{\n        //Otherwise,we send data to the server\n\n    fetch(\"http://127.0.0.1:5000/instructor_update_bio\",{\n        method:\"POST\",\n         body:JSON.stringify(this.state.bio),\n         \"Content-type\":\"application/json\",\n\n    \n    \n    headers:{\n        \n        Authorization:`${localStorage.getItem(\"instructor_token\")}`,\n       \n    }\n}\n    )\n    .then(res=>res.json())\n    .then(data=>{\n        alert(data.message)\n    })\n    .catch(err=>{alert(\"No Network\")})\n}\n    \n}\n\n\n\nnamehandler=(e)=>{\n    this.setState({\n        name:e.target.value\n    })\n}\n\n\n\n\nsubmitname=(e)=>{\n    e.preventDefault();\n        /*I'm checking to see wether the name is empty or not\n    If it's  empty, we throw error message*/\n    if (this.state.name.trim()===\"\"){\n        this.setState({\n            nameerr:\"Name Required\"\n         })\n    }\n    else{\n\n    \n      //Otherwise we send data to the server for processing\n\n      this.setState({\n        loading:true\n    })\n\n    fetch(\"http://127.0.0.1:5000/instructor_update_name\",{\n        method:\"POST\",\n        \"Content-Type\":\"Application/json\",\n         body:JSON.stringify(this.state.name),\n    \n    \n    headers:{\n        Authorization:`${localStorage.getItem(\"instructor_token\")}`\n    }\n}\n    )\n    .then(res=>res.json())\n    .then(data=>{\n        alert(data.message);\n        this.setState({\n            loading:false\n        })\n    }).catch(err=>{console.log(\"No Network\")})\n} \n}\n\n\n\n\n\n\n\n \n\n  render(){\n      return(\n          <div>\n          <div style={{flexDirection:\"row\"}} className=\"col text-center\">\n          <h3 style={{marginTop:100,textAlign:\"center\",fontSize:20}}>Update profile picture</h3>\n          <input onChange={this.filechangehandler} type=\"file\" name=\"instructor_img\" className=\"inputfile1\"/>\n          {this.state.loading==false?<button onClick={this.uploadhandler} className=\"upload-button\">Upload</button>:\n          <button onClick={this.uploadhandler} className=\"upload-button\">Uploading....</button>\n        }\n          <h3 style={{color:\"red\",fontSize:18}}>{this.state.imgerr}</h3>\n          </div>\n\n        \n\n        \n         \n         \n\n          <div style={{flexDirection:\"row\"}} className=\"col text-center\">\n          <h3 style={{marginTop:30,textAlign:\"center\",fontSize:20}}>Update name</h3>\n          <input  placeholder=\"Name\"value={this.state.name} onChange={this.namehandler} type=\"text\" name=\"name\" className=\"nameinput\"/>\n          {this.state.loading==false?<button onClick={this.submitname} className=\"namebutton\">Update</button>:\n          <button onClick={this.submitname} className=\"namebutton\">Updating....</button>\n          }\n          <h3 style={{color:\"red\",fontSize:18}}>{this.state.nameerr}</h3>\n\n          {this.state.errors.name.length>0&&\n                          <h3 style={{color:\"red\",fontSize:15}}>{this.state.errors.bio}</h3>\n        \n                            }\n          </div>\n\n\n          <div style={{flexDirection:\"row\"}} className=\"col text-center\">\n          <h3 style={{marginTop:30,textAlign:\"center\",fontSize:20}}>Update Bio</h3>\n          <textarea required=\"true\" placeholder=\"My Bio\"value={this.state.bio} onChange={this.biohandler} type=\"text\" name=\"bio\" className=\"nameinput\"/>\n          <button onClick={this.submitbio} className=\"namebutton\">Update</button>\n          <h3 style={{color:\"red\",fontSize:18}}>{this.state.bioerr}</h3>\n          {this.state.errors.bio.length>0&&\n                          <h3 style={{color:\"red\",fontSize:15}}>{this.state.errors.bio}</h3>\n        \n                            }\n\n          </div>\n       \n          \n        \n\n          <div style={{flexDirection:\"row\"}} className=\"col text-center\">\n          <button className=\"logoutbutn\" onClick={()=>{localStorage.removeItem(\"instructor_token\");this.props.history.push(\"InstructorLogin\")}}>Logout Account</button>\n          </div>\n\n        \n\n\n\n\n\n          </div>\n      )\n  }\n\n}\n\nexport default Editprofile;"]},"metadata":{},"sourceType":"module"}