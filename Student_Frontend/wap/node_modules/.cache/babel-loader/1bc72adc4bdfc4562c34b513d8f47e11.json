{"ast":null,"code":"var _jsxFileName = \"/media/allen/SIMBAD/Flaskprojects/Preschool/design/preschool/Student_Frontend/wap/src/StudentSignup.js\";\nimport React from 'react';\nimport './Signup.css';\nimport { Link } from 'react-router-dom'; //I'm using this for email validation\n\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i); //function to validate the form\n\nconst validateForm = errors => {\n  let valid = true;\n  Object.values(errors).forEach( //If we have an error string entered by the user,set valid to false\n  val => val.length > 0 && (valid = false));\n  return valid;\n};\n\nclass StudentSignup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleinput = e => {\n      e.preventDefault();\n      let name = e.target.name;\n      let value = e.target.value;\n      let errors = this.state.errors;\n      /*I'm using switch \n      statement here because\n       I want to avoid multiple\n      if else statements*/\n\n      switch (name) {\n        case \"fullname\":\n          errors.fullname = value.length < 6 ? 'Full Name must not be less than 6 characters' : '';\n          break;\n        //Here,I'm testing email pattern\n\n        case 'email':\n          errors.email = validEmailRegex.test(value) ? '' : 'Email is not valid!';\n          break;\n\n        case 'password':\n          errors.password = value.length < 8 ? 'Password must be at least 8 characters long!' : '';\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors,\n        [name]: value\n      }, () => {\n        //So that I can see the result in the conssole\n        console.log(errors);\n      });\n    };\n\n    this.signup = e => {\n      e.preventDefault();\n\n      if (validateForm(this.state.errors)) {\n        console.log(\"Form is valid\");\n        this.setState({});\n      } else {\n        this.setState({\n          loading: true\n        });\n        fetch(\" http://127.0.0.1:5000/student_signup\", {\n          method: \"POST\",\n          body: JSON.stringify(this.state),\n          headers: {\n            'Content-type': 'application/json'\n          }\n        }).then(res => res.json()).then(data => {\n          this.setState({\n            loading: false\n          });\n\n          if (data.error == null) {\n            alert(data.message);\n            this.props.history.push(\"StudentLogin\");\n          } else {\n            this.setState({\n              error: data.error\n            });\n          }\n        }).catch(err => {\n          alert(err);\n        });\n      }\n    };\n\n    this.state = {\n      fullname: \"\",\n      email: \"\",\n      password: \"\",\n      error: \"\",\n      //error message from the server\n      message: \"\",\n      k: \"\",\n      //This will throw an error message if the user submits an empty form\n      errors: {\n        //Error from client due to user inputs\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        fullname: \"\"\n      },\n      loading: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-container \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.signup,\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: \"grey\",\n        fontSize: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 23\n      }\n    }, \"Signup for Wap\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleinput,\n      className: \" forminput\",\n      placeholder: \"Full name\",\n      name: \"fullname\",\n      value: this.state.fullname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 27\n      }\n    }), this.state.errors.fullname.length > 0 && /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: \"red\",\n        fontSize: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 27\n      }\n    }, this.state.errors.fullname), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleinput,\n      className: \" forminput\",\n      placeholder: \"Email\",\n      name: \"email\",\n      value: this.state.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        fontSize: 15,\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 29\n      }\n    }, this.state.error), this.state.errors.email.length > 0 && /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: \"red\",\n        fontSize: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 27\n      }\n    }, this.state.errors.email), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      onChange: this.handleinput,\n      className: \" forminput\",\n      placeholder: \"Password\",\n      name: \"password\",\n      value: this.state.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 24\n      }\n    }), this.state.errors.password.length > 0 && /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: \"red\",\n        fontSize: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 27\n      }\n    }, this.state.errors.password), this.state.loading == false ? /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"formbutton\",\n      value: \"Signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 54\n      }\n    }) : /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"formbutton\",\n      value: \"Sending...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 115\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        fontSize: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 27\n      }\n    }, \"Already have an account?\", /*#__PURE__*/React.createElement(Link, {\n      to: \"/studentlogin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      style: {\n        fontSize: 15,\n        color: \"rgb(184, 23, 103)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 29\n      }\n    }, \"Login\")))))));\n  }\n\n}\n\nexport default StudentSignup;","map":{"version":3,"sources":["/media/allen/SIMBAD/Flaskprojects/Preschool/design/preschool/Student_Frontend/wap/src/StudentSignup.js"],"names":["React","Link","validEmailRegex","RegExp","validateForm","errors","valid","Object","values","forEach","val","length","StudentSignup","Component","constructor","props","handleinput","e","preventDefault","name","target","value","state","fullname","email","test","password","setState","console","log","signup","loading","fetch","method","body","JSON","stringify","headers","then","res","json","data","error","alert","message","history","push","catch","err","k","render","color","fontSize"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Signup.css';\nimport {Link} from 'react-router-dom';\n\n\n//I'm using this for email validation\nconst validEmailRegex= \nRegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n\n\n//function to validate the form\nconst validateForm=(errors)=>{\n    let valid=true;\n    Object.values(errors).forEach(\n        //If we have an error string entered by the user,set valid to false\n        (val)=>val.length>0&&(valid=false)\n    );\n    return valid;\n}\n\n\n\n\n\nclass StudentSignup extends React.Component{\n\n\n\n    constructor(props){\n        super(props);\n        this.state={\n            fullname:\"\",\n            email:\"\",\n            password:\"\",\n            error:\"\",//error message from the server\n            message:\"\",\n            k:\"\",//This will throw an error message if the user submits an empty form\n            errors:{//Error from client due to user inputs\n             name:\"\",\n             email:\"\",\n             password:\"\",\n             fullname:\"\"\n            },\n            loading:false\n            \n        }\n    }\n\n\n\n\n    handleinput=(e)=>{\n        e.preventDefault();\n        let name=e.target.name;\n        let value=e.target.value;\n        let errors =this.state.errors;\n        /*I'm using switch \n        statement here because\n         I want to avoid multiple\n        if else statements*/\n\n        switch(name){\n            case \"fullname\":\n                errors.fullname=value.length<6\n                ?'Full Name must not be less than 6 characters':'';\n                break;\n                //Here,I'm testing email pattern\n            case 'email': \n                errors.email = \n                  validEmailRegex.test(value)\n                    ? ''\n                    : 'Email is not valid!';\n                break; \n                \n            case 'password': \n             errors.password = \n              value.length < 8\n               ? 'Password must be at least 8 characters long!'\n               : '';\n            break;\n         default:\n         break;\n        }\n\n        this.setState({errors, [name]: value}, ()=> {\n            //So that I can see the result in the conssole\n            console.log(errors)\n        })\n\n    }\n\n\n\n\n\n    signup=(e)=>{\n        e.preventDefault();\n       \n        if(validateForm(this.state.errors)){\n            console.log(\"Form is valid\")\n            this.setState({\n                \n            })\n        }\n        else{\n       \n          this.setState({\n              loading:true\n          })\n\n\n        fetch(\" http://127.0.0.1:5000/student_signup\",{\n            method:\"POST\",\n            body:JSON.stringify(this.state),\n            headers:{\n                'Content-type':'application/json'\n            }\n        })\n        .then(res=>res.json())\n        .then(data=>{\n            this.setState({\n                loading:false\n            })\n            \n            if (data.error==null){\n                alert(data.message);\n                this.props.history.push(\"StudentLogin\")\n              \n            }\n            else{\n                this.setState({error:data.error})\n            }\n        }).catch((err)=>{alert(err)});\n        \n    }\n\n    }\n\n\n\n\n\n\n\n    render(){\n        return(\n            \n            <div className=\"row\">\n            <div className=\"bg\">\n          \n                  <div className=\"form-container \">\n                      <form onSubmit={this.signup} className=\"form-group\">\n                      <h3 style={{color:\"grey\",fontSize:20}}>Signup for Wap</h3>\n                          <input type=\"text\" onChange={this.handleinput}\n                          className=\" forminput\"\n                          placeholder=\"Full name\"\n                          name=\"fullname\"\n                          value={this.state.fullname}\n                          />\n                          {this.state.errors.fullname.length>0&&\n                          <h3 style={{color:\"red\",fontSize:15}}>{this.state.errors.fullname}</h3>\n                                        }\n\n                       <input type=\"text\" onChange={this.handleinput}\n                          className=\" forminput\"\n                          placeholder=\"Email\"\n                          name=\"email\"\n                          \n                          value={this.state.email}\n                          />\n                            <h3 style={{fontSize:15,color:\"red\"}}>{this.state.error}</h3>\n                            {this.state.errors.email.length>0&&\n                          <h3 style={{color:\"red\",fontSize:15}}>{this.state.errors.email}</h3>\n        \n                            }\n                       \n                       <input type=\"password\" onChange={this.handleinput}\n                          className=\" forminput\"\n                          placeholder=\"Password\"\n                          name=\"password\"\n                          value={this.state.password}\n                          />\n                            {this.state.errors.password.length>0&&\n                          <h3 style={{color:\"red\",fontSize:15}}>{this.state.errors.password}</h3>\n        \n                            }\n\n                          {this.state.loading==false?<input type=\"submit\" className=\"formbutton\" value=\"Signup\"/>:<input type=\"submit\" className=\"formbutton\" value=\"Sending...\"/>}\n\n                          <h3 style={{fontSize:15}}>\n                              Already have an account?\n                          <Link to=\"/studentlogin\">\n                            <a  style={{fontSize:15,color:\"rgb(184, 23, 103)\"}}>\n                              Login\n                              </a> \n                              </Link>\n                              </h3>\n                      </form>\n\n                     \n            </div>\n         </div>\n         </div>\n         \n         \n         \n        )\n    }\n}\n\nexport default StudentSignup;"]},"metadata":{},"sourceType":"module"}