{"ast":null,"code":"var _jsxFileName = \"/media/allen/SIMBAD/Flaskprojects/Preschool/design/preschool/Student_Frontend/wap/src/StudentLogin.js\";\nimport React from 'react';\nimport './Topnav.css';\nimport { Link } from 'react-router-dom'; //I'm using this for email validation\n\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i); //function to validate the form\n\nconst validateForm = errors => {\n  let valid = true;\n  Object.values(errors).forEach( //If we have an error string entered by the user,set valid to false\n  val => val.length > 0 && (valid = false));\n  return valid;\n};\n\nclass StudentLogin extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleinput = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n      let name = e.target.name;\n      let value = e.target.value;\n      let errors = this.state.errors;\n      /*I'm using switch \n      statement here because\n       I want to avoid multiple\n      if else statements*/\n\n      switch (name) {\n        //Using the switch statement to reduce multiple if else statements\n        //Here,I'm testing email pattern\n        case 'email':\n          errors.email = validEmailRegex.test(value) ? '' : 'Email is not valid!';\n          break;\n\n        case 'password':\n          errors.password = value.length < 8 ? 'Password must be at least 8 characters long!' : '';\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors,\n        [name]: value\n      }, () => {\n        //So that I can see the result in the conssole\n        console.log(errors);\n      });\n    };\n\n    this.login = e => {\n      e.preventDefault();\n\n      if (validateForm(this.state.errors)) {\n        console.log(\"Form is  valid\");\n        fetch(\" http://127.0.0.1:5000/student_login\", {\n          method: \"POST\",\n          body: JSON.stringify(this.state),\n          headers: {\n            'Content-type': 'application/json'\n          }\n        }).then(res => res.json()).then(data => {\n          this.setState({\n            loading: false\n          });\n\n          if (data.error == null) {\n            alert(\"Logged in sucessfully\");\n            localStorage.setItem(\"student_token\", data);\n            this.props.history.push(\"StudentProfile\");\n          } else {\n            this.setState({\n              error: data.error\n            });\n          }\n        }).catch(err => {\n          alert(err);\n        });\n      } else {\n        this.setState({\n          k: \"Invalid Form\"\n        });\n      }\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      error: \"\",\n      //error from the server will be loaded here\n      message: \"\",\n      //message from the server will be loaded here\n      k: \"\",\n      //This will throw an error message if the user submits an empty form\n      errors: {\n        //Error from client due to user inputs\n        name: \"\",\n        email: \"\",\n        password: \"\"\n      },\n      loading: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-container\",\n      onSubmit: this.login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.signup,\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: \"red\",\n        fontSize: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 23\n      }\n    }, this.state.k), /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: \"grey\",\n        fontSize: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 27\n      }\n    }, \"Log in for Wap\"), /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: \"red\",\n        fontSize: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 23\n      }\n    }, this.state.error), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleinput,\n      className: \" forminput\",\n      placeholder: \"Email\",\n      name: \"email\",\n      required: \"true\",\n      value: this.state.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 24\n      }\n    }), this.state.errors.email.length > 0 && /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: \"red\",\n        fontSize: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 27\n      }\n    }, this.state.errors.email), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      onChange: this.handleinput,\n      className: \" forminput\",\n      placeholder: \"Password\",\n      name: \"password\",\n      required: \"true\",\n      value: this.state.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 24\n      }\n    }), this.state.loading == false ? /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"formbutton\",\n      value: \" Log in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 52\n      }\n    }) : /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"formbutton\",\n      value: \"Sending....\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 114\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        fontSize: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 27\n      }\n    }, \"Don't have an account?\", /*#__PURE__*/React.createElement(Link, {\n      to: \"/studentsignup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      style: {\n        fontSize: 15,\n        color: \"rgb(184, 23, 103)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 29\n      }\n    }, \"Signup\"))), /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        fontSize: 15,\n        marginTop: 12,\n        color: \"rgb(184, 23, 103)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/forgotpassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 35\n      }\n    }, \"Forgot Password?\"))))));\n  }\n\n}\n\nexport default StudentLogin;","map":{"version":3,"sources":["/media/allen/SIMBAD/Flaskprojects/Preschool/design/preschool/Student_Frontend/wap/src/StudentLogin.js"],"names":["React","Link","validEmailRegex","RegExp","validateForm","errors","valid","Object","values","forEach","val","length","StudentLogin","Component","constructor","props","handleinput","e","setState","target","name","value","state","email","test","password","console","log","login","preventDefault","fetch","method","body","JSON","stringify","headers","then","res","json","data","loading","error","alert","localStorage","setItem","history","push","catch","err","k","message","render","signup","color","fontSize","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Topnav.css';\nimport {Link} from 'react-router-dom';\n\n\n\n//I'm using this for email validation\nconst validEmailRegex= \nRegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n\n\n//function to validate the form\nconst validateForm=(errors)=>{\n    let valid=true;\n    Object.values(errors).forEach(\n        //If we have an error string entered by the user,set valid to false\n        (val)=>val.length>0&&(valid=false)\n    );\n    return valid;\n}\n\n\n\n\n\n\n\n\n\n\nclass StudentLogin extends React.Component{\n\n\n\n\n    constructor(props){\n        super(props);\n        this.state={\n            email:\"\",\n            password:\"\",\n            error:\"\",//error from the server will be loaded here\n            message:\"\",//message from the server will be loaded here\n            k:\"\",//This will throw an error message if the user submits an empty form\n            errors:{//Error from client due to user inputs\n             name:\"\",\n             email:\"\",\n             password:\"\",\n             \n            },\n            loading:false\n            \n        }\n    }\n\n    handleinput=(e)=>{\n        this.setState({\n          [e.target.name]:e.target.value\n        });\n\n        let name=e.target.name;\n        let value=e.target.value;\n        let errors =this.state.errors;\n        /*I'm using switch \n        statement here because\n         I want to avoid multiple\n        if else statements*/\n\n        switch(name){\n                 //Using the switch statement to reduce multiple if else statements\n                //Here,I'm testing email pattern\n            case 'email': \n                errors.email = \n                  validEmailRegex.test(value)\n                    ? ''\n                    : 'Email is not valid!';\n                break; \n                \n            case 'password': \n             errors.password = \n              value.length < 8\n               ? 'Password must be at least 8 characters long!'\n               : '';\n            break;\n         default:\n         break;\n        }\n\n        this.setState({errors, [name]: value}, ()=> {\n            //So that I can see the result in the conssole\n            console.log(errors)\n        })\n    }\n\n    login=(e)=>{\n        e.preventDefault();\n    \n        if(validateForm(this.state.errors)){\n            console.log(\"Form is  valid\")\n            \n            \n\n     \n        fetch(\" http://127.0.0.1:5000/student_login\",{\n            method:\"POST\",\n            body:JSON.stringify(this.state),\n            headers:{\n                'Content-type':'application/json'\n            }\n        })\n        .then(res=>res.json())\n        .then(data=>{\n            this.setState({\n                loading:false\n            })\n            if (data.error==null){\n                alert(\"Logged in sucessfully\");\n                localStorage.setItem(\"student_token\",data)\n                this.props.history.push(\"StudentProfile\");\n            }\n            else{\n                this.setState({error:data.error})\n            }\n        }).catch((err)=>{alert(err)});\n        \n        \n        }\n            \n               \n        else{\n            this.setState({\n                k:\"Invalid Form\"\n            })\n        }   \n    \n\n\n\n \n\n\n\n    }\n\n\n\n\n\n\n\n    render(){\n        return(\n            \n            <div className=\"row\">\n            <div className=\"bg\">\n                  <div className=\"form-container\" onSubmit={this.login}>\n                      <form onSubmit={this.signup} className=\"form-group\">\n                      <h3 style={{color:\"red\",fontSize:15}}>{this.state.k}</h3>\n                          <h3 style={{color:\"grey\",fontSize:20}}>Log in for Wap</h3>\n                      <h3 style={{color:\"red\",fontSize:20}}>{this.state.error}</h3>\n                    \n                       <input type=\"text\" onChange={this.handleinput}\n                          className=\" forminput\"\n                          placeholder=\"Email\"\n                          name=\"email\"\n                          required=\"true\"\n                          \n                          value={this.state.email}\n                          />\n                        {this.state.errors.email.length>0&&\n                          <h3 style={{color:\"red\",fontSize:15}}>{this.state.errors.email}</h3>\n        \n                            }\n                       <input type=\"password\" onChange={this.handleinput}\n                          className=\" forminput\"\n                          placeholder=\"Password\"\n                          name=\"password\"\n                          required=\"true\"\n                          value={this.state.password}\n                          />\n                        \n\n                        {this.state.loading==false?<input type=\"submit\" className=\"formbutton\" value=\" Log in\"/>:<input type=\"submit\" className=\"formbutton\" value=\"Sending....\"/>}\n                          <h3 style={{fontSize:15}}>\n                              Don't have an account?\n                          <Link to=\"/studentsignup\">\n                            <a  style={{fontSize:15,color:\"rgb(184, 23, 103)\"}}>\n                              Signup\n                              </a> \n                              </Link>\n                              </h3>\n                              <h3 style={{fontSize:15,marginTop:12,color:\"rgb(184, 23, 103)\"}}>\n                                  <Link to=\"/forgotpassword\">\n                                      Forgot Password?\n                                  </Link>\n                              </h3>\n                      </form>\n            </div>\n         </div>\n         </div>\n         \n         \n         \n        )\n    }\n}\n\nexport default StudentLogin;"]},"metadata":{},"sourceType":"module"}