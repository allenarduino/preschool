{"ast":null,"code":"import _classCallCheck from\"/media/allen/SIMBAD/Flaskprojects/Preschool/design/preschool/Student_Frontend/wap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/media/allen/SIMBAD/Flaskprojects/Preschool/design/preschool/Student_Frontend/wap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/media/allen/SIMBAD/Flaskprojects/Preschool/design/preschool/Student_Frontend/wap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/media/allen/SIMBAD/Flaskprojects/Preschool/design/preschool/Student_Frontend/wap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import'./TakeQuiz.css';var TakeQuiz=/*#__PURE__*/function(_React$Component){_inherits(TakeQuiz,_React$Component);var _super=_createSuper(TakeQuiz);function TakeQuiz(props){var _this;_classCallCheck(this,TakeQuiz);_this=_super.call(this,props);_this.next_question_handler=function(){var _this$state=_this.state,userAnswer=_this$state.userAnswer,correct_answer=_this$state.correct_answer,score=_this$state.score;//Comparing the userAnswer with the actual correct answer\nif(userAnswer===correct_answer){_this.setState({score:score+1});_this.setState({currentIndex:_this.state.currentIndex+1,userAnswer:null});console.log(_this.state.currentIndex);}};_this.checkAnswer=function(answer){_this.setState({userAnswer:answer,disabled:false});};_this.finish_handler=function(){if(_this.state.currentIndex===_this.state.questions.length-1){_this.setState({quiz_end:true});}};_this.state={userAnswer:null,quiz_data:[],currentIndex:0,options:[],score:0,quiz_end:false,disabled:true//Disables next button if user is yet to select an option\n};return _this;}//We load the questions from the server if component mounts\n_createClass(TakeQuiz,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var currentIndex=this.state.currentIndex;fetch(\"https://merl.herokuapp.com/take_quiz/\".concat(this.props.match.params.id),{method:\"GET\",\"Content-Type\":\"application/json\"}).then(function(res){return res.json();}).then(function(data){_this2.setState(function(){return{quiz_data:data,question:data[_this2.state.currentIndex].question,correct_answer:data[_this2.state.currentIndex].correct_answer,options:data[_this2.state.currentIndex].options};});}).catch(function(err){return console.log(err);});}//We need to know the user's answer,the correct answer and the score.\n},{key:\"componentDidUpdate\",/*Now we update the component................\nwhen the compinent updates or when the currrent index changes,\nwe have to set the questions and also disable the disable the\noptions so that the user or student will not click on the options.\n\nWhen the component updates,we are going to load another question and disables\nthe next button until user or student selects an option\n*/value:function componentDidUpdate(Prevprops,prevState){var _this3=this;if(this.state.currentIndex!==prevState.currentIndex){this.setState(function(){return{disabled:true,quiz_data:_this3.state.quiz_data,question:_this3.state.quiz_data[_this3.state.currentIndex].question,options:_this3.state.quiz_data[_this3.state.currentIndex].options,correct_answer:_this3.state.quiz_data[_this3.state.currentIndex].correct_answer};});}}//Now we render the data into the  UI\n},{key:\"render\",value:function render(){var _this4=this;var _this$state2=this.state,options=_this$state2.options,userAnswer=_this$state2.userAnswer,currentIndex=_this$state2.currentIndex,quiz_end=_this$state2.quiz_end;if(quiz_end){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"di\",null,\"jjjjjjj\"));}else{return/*#__PURE__*/React.createElement(\"div\",{className:\"col text-center col-lg-7 col-xs-10 col-xl-7  col-sm-10 col-md-10 profile-container col text-center\"},/*#__PURE__*/React.createElement(\"div\",{className:\"quiz-container\"},/*#__PURE__*/React.createElement(\"h4\",{style:{marginTop:100}},this.state.question),this.state.options.map(function(option){return/*#__PURE__*/React.createElement(\"p\",{key:option.id,className:\"initial-options  \".concat(_this4.state.userAnswer===option?\"selected\":null),onClick:function onClick(){return _this4.checkAnswer(option);}},option);}),this.state.currentIndex<this.state.quiz_data.length-1&&/*#__PURE__*/React.createElement(\"button\",{className:\"finish-butn\",disabled:this.state.disabled,onClick:this.next_question_handler},\"Next\"),this.state.currentIndex===this.state.quiz_data.length-1&&/*#__PURE__*/React.createElement(\"button\",{onClick:this.finish_handler},\"Finish\")));}}}]);return TakeQuiz;}(React.Component);export default TakeQuiz;","map":{"version":3,"sources":["/media/allen/SIMBAD/Flaskprojects/Preschool/design/preschool/Student_Frontend/wap/src/TakeQuiz.js"],"names":["React","TakeQuiz","props","next_question_handler","state","userAnswer","correct_answer","score","setState","currentIndex","console","log","checkAnswer","answer","disabled","finish_handler","questions","length","quiz_end","quiz_data","options","fetch","match","params","id","method","then","res","json","data","question","catch","err","Prevprops","prevState","marginTop","map","option","Component"],"mappings":"gxBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,gBAAP,C,GAGMC,CAAAA,Q,gHAEN,kBAAYC,KAAZ,CAAkB,0CACd,uBAAMA,KAAN,EADc,MA0DbC,qBA1Da,CA0DS,UAAI,iBACiB,MAAKC,KADtB,CAChBC,UADgB,aAChBA,UADgB,CACLC,cADK,aACLA,cADK,CACUC,KADV,aACUA,KADV,CAGvB;AAEA,GAAGF,UAAU,GAAGC,cAAhB,CAA+B,CAC3B,MAAKE,QAAL,CAAc,CACVD,KAAK,CAACA,KAAK,CAAC,CADF,CAAd,EAIA,MAAKC,QAAL,CAAc,CACVC,YAAY,CAAC,MAAKL,KAAL,CAAWK,YAAX,CAAwB,CAD3B,CAEVJ,UAAU,CAAC,IAFD,CAAd,EAIAK,OAAO,CAACC,GAAR,CAAY,MAAKP,KAAL,CAAWK,YAAvB,EACH,CAGJ,CA5Ea,OAyFlBG,WAzFkB,CAyFN,SAACC,MAAD,CAAU,CAClB,MAAKL,QAAL,CAAc,CACVH,UAAU,CAACQ,MADD,CAEVC,QAAQ,CAAC,KAFC,CAAd,EAIH,CA9FiB,OAoGlBC,cApGkB,CAoGH,UAAI,CACf,GAAG,MAAKX,KAAL,CAAWK,YAAX,GAA0B,MAAKL,KAAL,CAAWY,SAAX,CAAqBC,MAArB,CAA4B,CAAzD,CAA2D,CACvD,MAAKT,QAAL,CAAc,CACVU,QAAQ,CAAC,IADC,CAAd,EAGH,CACJ,CA1GiB,CAEd,MAAKd,KAAL,CAAW,CACPC,UAAU,CAAC,IADJ,CAEPc,SAAS,CAAC,EAFH,CAGPV,YAAY,CAAC,CAHN,CAIPW,OAAO,CAAC,EAJD,CAKPb,KAAK,CAAC,CALC,CAMPW,QAAQ,CAAC,KANF,CAOPJ,QAAQ,CAAC,IAAI;AAPN,CAAX,CAFc,aAcb,CAIL;kFAEmB,oBACRL,CAAAA,YADQ,CACM,KAAKL,KADX,CACRK,YADQ,CAEfY,KAAK,gDAAyC,KAAKnB,KAAL,CAAWoB,KAAX,CAAiBC,MAAjB,CAAwBC,EAAjE,EACL,CACIC,MAAM,CAAC,KADX,CAEI,eAAe,kBAFnB,CADK,CAAL,CAMCC,IAND,CAMM,SAAAC,GAAG,QAAEA,CAAAA,GAAG,CAACC,IAAJ,EAAF,EANT,EAOCF,IAPD,CAOM,SAAAG,IAAI,CAAE,CACT,MAAI,CAACrB,QAAL,CAAc,UAAI,CACd,MAAM,CACFW,SAAS,CAACU,IADR,CAEFC,QAAQ,CAACD,IAAI,CAAC,MAAI,CAACzB,KAAL,CAAWK,YAAZ,CAAJ,CAA8BqB,QAFrC,CAGFxB,cAAc,CAACuB,IAAI,CAAC,MAAI,CAACzB,KAAL,CAAWK,YAAZ,CAAJ,CAA8BH,cAH3C,CAIFc,OAAO,CAACS,IAAI,CAAC,MAAI,CAACzB,KAAL,CAAWK,YAAZ,CAAJ,CAA8BW,OAJpC,CAAN,CAMH,CAPD,EASF,CAjBD,EAkBCW,KAlBD,CAkBO,SAAAC,GAAG,QAAEtB,CAAAA,OAAO,CAACC,GAAR,CAAYqB,GAAZ,CAAF,EAlBV,EAmBH,CAeI;4BA+DL;;;;;;;oCAUmBC,S,CAAUC,S,CAAU,iBAEnC,GAAG,KAAK9B,KAAL,CAAWK,YAAX,GAA0ByB,SAAS,CAACzB,YAAvC,CAAoD,CAE/C,KAAKD,QAAL,CAAc,UAAI,CACd,MAAM,CACJM,QAAQ,CAAC,IADL,CAEJK,SAAS,CAAC,MAAI,CAACf,KAAL,CAAWe,SAFjB,CAGJW,QAAQ,CAAC,MAAI,CAAC1B,KAAL,CAAWe,SAAX,CAAqB,MAAI,CAACf,KAAL,CAAWK,YAAhC,EAA8CqB,QAHnD,CAIJV,OAAO,CAAC,MAAI,CAAChB,KAAL,CAAWe,SAAX,CAAqB,MAAI,CAACf,KAAL,CAAWK,YAAhC,EAA8CW,OAJlD,CAKJd,cAAc,CAAC,MAAI,CAACF,KAAL,CAAWe,SAAX,CAAqB,MAAI,CAACf,KAAL,CAAWK,YAAhC,EAA8CH,cALzD,CAAN,CAOH,CARD,EAUJ,CAEJ,CAID;uCAEQ,kCAC4C,KAAKF,KADjD,CACEgB,OADF,cACEA,OADF,CACUf,UADV,cACUA,UADV,CACqBI,YADrB,cACqBA,YADrB,CACkCS,QADlC,cACkCA,QADlC,CAIL,GAAGA,QAAH,CAAY,CACR,mBACI,4CACD,wCADC,CADJ,CAOH,CARD,IASI,CACA,mBACI,2BAAM,SAAS,CAAC,oGAAhB,eACI,2BAAK,SAAS,CAAC,gBAAf,eACA,0BAAI,KAAK,CAAE,CAACiB,SAAS,CAAC,GAAX,CAAX,EAA6B,KAAK/B,KAAL,CAAW0B,QAAxC,CADA,CAGK,KAAK1B,KAAL,CAAWgB,OAAX,CAAmBgB,GAAnB,CAAuB,SAAAC,MAAM,qBACzB,yBAAG,GAAG,CAAEA,MAAM,CAACb,EAAf,CACA,SAAS,4BAAsB,MAAI,CAACpB,KAAL,CAAWC,UAAX,GAAwBgC,MAAxB,CAAgC,UAAhC,CAA2C,IAAjE,CADT,CAEA,OAAO,CAAE,yBAAI,CAAA,MAAI,CAACzB,WAAL,CAAiByB,MAAjB,CAAJ,EAFT,EAIEA,MAJF,CADyB,EAA7B,CAHL,CAcM,KAAKjC,KAAL,CAAWK,YAAX,CAAwB,KAAKL,KAAL,CAAWe,SAAX,CAAqBF,MAArB,CAA4B,CAApD,eACA,8BAAQ,SAAS,CAAC,aAAlB,CACA,QAAQ,CAAE,KAAKb,KAAL,CAAWU,QADrB,CAEA,OAAO,CAAE,KAAKX,qBAFd,SAfN,CAwBM,KAAKC,KAAL,CAAWK,YAAX,GAA0B,KAAKL,KAAL,CAAWe,SAAX,CAAqBF,MAArB,CAA4B,CAAtD,eACI,8BACA,OAAO,CAAE,KAAKF,cADd,WAzBV,CADJ,CADJ,CAoCH,CACH,C,sBA5MsBf,KAAK,CAACsC,S,EAuN7B,cAAerC,CAAAA,QAAf","sourcesContent":["import React from 'react';\nimport './TakeQuiz.css';\n\n\nclass TakeQuiz extends React.Component{\n\nconstructor(props){\n    super(props);\n    this.state={\n        userAnswer:null,\n        quiz_data:[],\n        currentIndex:0,\n        options:[],\n        score:0,\n        quiz_end:false,\n        disabled:true//Disables next button if user is yet to select an option\n\n    }\n\n\n    }\n\n\n\n//We load the questions from the server if component mounts\n\ncomponentDidMount(){\n    const {currentIndex}=this.state;\n    fetch(`https://merl.herokuapp.com/take_quiz/${this.props.match.params.id}`,\n    {\n        method:\"GET\",\n        \"Content-Type\":\"application/json\",\n    }\n    )\n    .then(res=>res.json())\n    .then(data=>{\n       this.setState(()=>{\n           return{\n               quiz_data:data,\n               question:data[this.state.currentIndex].question,\n               correct_answer:data[this.state.currentIndex].correct_answer,\n               options:data[this.state.currentIndex].options\n           };\n       })\n       \n    })\n    .catch(err=>console.log(err))\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n     //We need to know the user's answer,the correct answer and the score.\n\n     next_question_handler=()=>{\n        const {userAnswer,correct_answer,score}=this.state;\n\n        //Comparing the userAnswer with the actual correct answer\n\n        if(userAnswer===correct_answer){\n            this.setState({\n                score:score+1\n            })\n\n            this.setState({\n                currentIndex:this.state.currentIndex+1,\n                userAnswer:null,\n            })\n            console.log(this.state.currentIndex);\n        } \n\n\n    }\n  \n\n    \n   \n\n\n\n\n  \n\n//Function to check check if the student answered  so that we enable or disable next function\n\ncheckAnswer=(answer)=>{\n    this.setState({\n        userAnswer:answer,\n        disabled:false,\n    })\n}\n\n\n\n\n\nfinish_handler=()=>{\n    if(this.state.currentIndex===this.state.questions.length-1){\n        this.setState({\n            quiz_end:true\n        })\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n/*Now we update the component................\nwhen the compinent updates or when the currrent index changes,\nwe have to set the questions and also disable the disable the\noptions so that the user or student will not click on the options.\n\nWhen the component updates,we are going to load another question and disables\nthe next button until user or student selects an option\n*/\n\n\ncomponentDidUpdate(Prevprops,prevState){\n    \n    if(this.state.currentIndex!==prevState.currentIndex){\n    \n         this.setState(()=>{\n             return{\n               disabled:true,\n               quiz_data:this.state.quiz_data,\n               question:this.state.quiz_data[this.state.currentIndex].question,\n               options:this.state.quiz_data[this.state.currentIndex].options,\n               correct_answer:this.state.quiz_data[this.state.currentIndex].correct_answer\n             };\n         })\n    \n    }\n\n}\n\n\n\n//Now we render the data into the  UI\n\nrender(){\n   const {options,userAnswer,currentIndex,quiz_end}=this.state;\n\n\n   if(quiz_end){\n       return(\n           <div>\n          <di>jjjjjjj</di>\n           </div>\n       );\n\n       \n   }\n   else{\n       return(\n           <div  className=\"col text-center col-lg-7 col-xs-10 col-xl-7  col-sm-10 col-md-10 profile-container col text-center\">\n               <div className=\"quiz-container\">\n               <h4 style={{marginTop:100}}>{this.state.question}</h4>\n                 { \n                    this.state.options.map(option=>(\n                        <p key={option.id}\n                        className={`initial-options  ${this.state.userAnswer===option? \"selected\":null}`}\n                        onClick={()=>this.checkAnswer(option)}\n                        >\n                         {option}\n                        </p>\n                    ))\n                 }\n\n                 {\n                     this.state.currentIndex<this.state.quiz_data.length-1&&\n                     <button className=\"finish-butn\"\n                     disabled={this.state.disabled}\n                     onClick={this.next_question_handler}\n                     >\n                          Next\n                     </button>\n                 }\n\n                 {\n                     this.state.currentIndex===this.state.quiz_data.length-1&&(\n                         <button\n                         onClick={this.finish_handler}\n                         >Finish</button>\n                     )\n                 }\n                 \n               </div>\n           </div>\n       )\n   }\n}\n\n\n\n\n\n\n\n\n}\n\nexport default TakeQuiz;"]},"metadata":{},"sourceType":"module"}