{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/media/allen/SIMBAD/Flaskprojects/Preschool/design/preschool/Student_Frontend/wap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = gatherSequenceExpressions;\n\nvar _getBindingIdentifiers = _interopRequireDefault(require(\"../retrievers/getBindingIdentifiers\"));\n\nvar _generated = require(\"../validators/generated\");\n\nvar _generated2 = require(\"../builders/generated\");\n\nvar _cloneNode = _interopRequireDefault(require(\"../clone/cloneNode\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction gatherSequenceExpressions(nodes, scope, declars) {\n  var exprs = [];\n  var ensureLastUndefined = true;\n\n  var _iterator = _createForOfIteratorHelper(nodes),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var node = _step.value;\n      ensureLastUndefined = false;\n\n      if ((0, _generated.isExpression)(node)) {\n        exprs.push(node);\n      } else if ((0, _generated.isExpressionStatement)(node)) {\n        exprs.push(node.expression);\n      } else if ((0, _generated.isVariableDeclaration)(node)) {\n        if (node.kind !== \"var\") return;\n\n        var _iterator2 = _createForOfIteratorHelper(node.declarations),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var declar = _step2.value;\n            var bindings = (0, _getBindingIdentifiers.default)(declar);\n\n            for (var _i = 0, _Object$keys = Object.keys(bindings); _i < _Object$keys.length; _i++) {\n              var key = _Object$keys[_i];\n              declars.push({\n                kind: node.kind,\n                id: (0, _cloneNode.default)(bindings[key])\n              });\n            }\n\n            if (declar.init) {\n              exprs.push((0, _generated2.assignmentExpression)(\"=\", declar.id, declar.init));\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        ensureLastUndefined = true;\n      } else if ((0, _generated.isIfStatement)(node)) {\n        var consequent = node.consequent ? gatherSequenceExpressions([node.consequent], scope, declars) : scope.buildUndefinedNode();\n        var alternate = node.alternate ? gatherSequenceExpressions([node.alternate], scope, declars) : scope.buildUndefinedNode();\n        if (!consequent || !alternate) return;\n        exprs.push((0, _generated2.conditionalExpression)(node.test, consequent, alternate));\n      } else if ((0, _generated.isBlockStatement)(node)) {\n        var body = gatherSequenceExpressions(node.body, scope, declars);\n        if (!body) return;\n        exprs.push(body);\n      } else if ((0, _generated.isEmptyStatement)(node)) {\n        ensureLastUndefined = true;\n      } else {\n        return;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  if (ensureLastUndefined) {\n    exprs.push(scope.buildUndefinedNode());\n  }\n\n  if (exprs.length === 1) {\n    return exprs[0];\n  } else {\n    return (0, _generated2.sequenceExpression)(exprs);\n  }\n}","map":{"version":3,"sources":["/media/allen/SIMBAD/Flaskprojects/Preschool/design/preschool/Student_Frontend/wap/node_modules/@babel/types/lib/converters/gatherSequenceExpressions.js"],"names":["Object","defineProperty","exports","value","default","gatherSequenceExpressions","_getBindingIdentifiers","_interopRequireDefault","require","_generated","_generated2","_cloneNode","obj","__esModule","nodes","scope","declars","exprs","ensureLastUndefined","node","isExpression","push","isExpressionStatement","expression","isVariableDeclaration","kind","declarations","declar","bindings","keys","key","id","init","assignmentExpression","isIfStatement","consequent","buildUndefinedNode","alternate","conditionalExpression","test","isBlockStatement","body","isEmptyStatement","length","sequenceExpression"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = gatherSequenceExpressions;\n\nvar _getBindingIdentifiers = _interopRequireDefault(require(\"../retrievers/getBindingIdentifiers\"));\n\nvar _generated = require(\"../validators/generated\");\n\nvar _generated2 = require(\"../builders/generated\");\n\nvar _cloneNode = _interopRequireDefault(require(\"../clone/cloneNode\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction gatherSequenceExpressions(nodes, scope, declars) {\n  const exprs = [];\n  let ensureLastUndefined = true;\n\n  for (const node of nodes) {\n    ensureLastUndefined = false;\n\n    if ((0, _generated.isExpression)(node)) {\n      exprs.push(node);\n    } else if ((0, _generated.isExpressionStatement)(node)) {\n      exprs.push(node.expression);\n    } else if ((0, _generated.isVariableDeclaration)(node)) {\n      if (node.kind !== \"var\") return;\n\n      for (const declar of node.declarations) {\n        const bindings = (0, _getBindingIdentifiers.default)(declar);\n\n        for (const key of Object.keys(bindings)) {\n          declars.push({\n            kind: node.kind,\n            id: (0, _cloneNode.default)(bindings[key])\n          });\n        }\n\n        if (declar.init) {\n          exprs.push((0, _generated2.assignmentExpression)(\"=\", declar.id, declar.init));\n        }\n      }\n\n      ensureLastUndefined = true;\n    } else if ((0, _generated.isIfStatement)(node)) {\n      const consequent = node.consequent ? gatherSequenceExpressions([node.consequent], scope, declars) : scope.buildUndefinedNode();\n      const alternate = node.alternate ? gatherSequenceExpressions([node.alternate], scope, declars) : scope.buildUndefinedNode();\n      if (!consequent || !alternate) return;\n      exprs.push((0, _generated2.conditionalExpression)(node.test, consequent, alternate));\n    } else if ((0, _generated.isBlockStatement)(node)) {\n      const body = gatherSequenceExpressions(node.body, scope, declars);\n      if (!body) return;\n      exprs.push(body);\n    } else if ((0, _generated.isEmptyStatement)(node)) {\n      ensureLastUndefined = true;\n    } else {\n      return;\n    }\n  }\n\n  if (ensureLastUndefined) {\n    exprs.push(scope.buildUndefinedNode());\n  }\n\n  if (exprs.length === 1) {\n    return exprs[0];\n  } else {\n    return (0, _generated2.sequenceExpression)(exprs);\n  }\n}"]},"metadata":{},"sourceType":"script"}