{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/media/allen/SIMBAD/Flaskprojects/Preschool/design/preschool/Student_Frontend/wap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = traverse;\n\nvar _definitions = require(\"../definitions\");\n\nfunction traverse(node, handlers, state) {\n  if (typeof handlers === \"function\") {\n    handlers = {\n      enter: handlers\n    };\n  }\n\n  var _handlers = handlers,\n      enter = _handlers.enter,\n      exit = _handlers.exit;\n  traverseSimpleImpl(node, enter, exit, state, []);\n}\n\nfunction traverseSimpleImpl(node, enter, exit, state, ancestors) {\n  var keys = _definitions.VISITOR_KEYS[node.type];\n  if (!keys) return;\n  if (enter) enter(node, ancestors, state);\n\n  var _iterator = _createForOfIteratorHelper(keys),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var key = _step.value;\n      var subNode = node[key];\n\n      if (Array.isArray(subNode)) {\n        for (var i = 0; i < subNode.length; i++) {\n          var child = subNode[i];\n          if (!child) continue;\n          ancestors.push({\n            node: node,\n            key: key,\n            index: i\n          });\n          traverseSimpleImpl(child, enter, exit, state, ancestors);\n          ancestors.pop();\n        }\n      } else if (subNode) {\n        ancestors.push({\n          node: node,\n          key: key\n        });\n        traverseSimpleImpl(subNode, enter, exit, state, ancestors);\n        ancestors.pop();\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  if (exit) exit(node, ancestors, state);\n}","map":{"version":3,"sources":["/media/allen/SIMBAD/Flaskprojects/Preschool/design/preschool/Student_Frontend/wap/node_modules/@babel/types/lib/traverse/traverse.js"],"names":["Object","defineProperty","exports","value","default","traverse","_definitions","require","node","handlers","state","enter","exit","traverseSimpleImpl","ancestors","keys","VISITOR_KEYS","type","key","subNode","Array","isArray","i","length","child","push","index","pop"],"mappings":"AAAA;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,QAAlB;;AAEA,IAAIC,YAAY,GAAGC,OAAO,CAAC,gBAAD,CAA1B;;AAEA,SAASF,QAAT,CAAkBG,IAAlB,EAAwBC,QAAxB,EAAkCC,KAAlC,EAAyC;AACvC,MAAI,OAAOD,QAAP,KAAoB,UAAxB,EAAoC;AAClCA,IAAAA,QAAQ,GAAG;AACTE,MAAAA,KAAK,EAAEF;AADE,KAAX;AAGD;;AALsC,kBAUnCA,QAVmC;AAAA,MAQrCE,KARqC,aAQrCA,KARqC;AAAA,MASrCC,IATqC,aASrCA,IATqC;AAWvCC,EAAAA,kBAAkB,CAACL,IAAD,EAAOG,KAAP,EAAcC,IAAd,EAAoBF,KAApB,EAA2B,EAA3B,CAAlB;AACD;;AAED,SAASG,kBAAT,CAA4BL,IAA5B,EAAkCG,KAAlC,EAAyCC,IAAzC,EAA+CF,KAA/C,EAAsDI,SAAtD,EAAiE;AAC/D,MAAMC,IAAI,GAAGT,YAAY,CAACU,YAAb,CAA0BR,IAAI,CAACS,IAA/B,CAAb;AACA,MAAI,CAACF,IAAL,EAAW;AACX,MAAIJ,KAAJ,EAAWA,KAAK,CAACH,IAAD,EAAOM,SAAP,EAAkBJ,KAAlB,CAAL;;AAHoD,6CAK7CK,IAL6C;AAAA;;AAAA;AAK/D,wDAAwB;AAAA,UAAbG,GAAa;AACtB,UAAMC,OAAO,GAAGX,IAAI,CAACU,GAAD,CAApB;;AAEA,UAAIE,KAAK,CAACC,OAAN,CAAcF,OAAd,CAAJ,EAA4B;AAC1B,aAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,OAAO,CAACI,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,cAAME,KAAK,GAAGL,OAAO,CAACG,CAAD,CAArB;AACA,cAAI,CAACE,KAAL,EAAY;AACZV,UAAAA,SAAS,CAACW,IAAV,CAAe;AACbjB,YAAAA,IAAI,EAAJA,IADa;AAEbU,YAAAA,GAAG,EAAHA,GAFa;AAGbQ,YAAAA,KAAK,EAAEJ;AAHM,WAAf;AAKAT,UAAAA,kBAAkB,CAACW,KAAD,EAAQb,KAAR,EAAeC,IAAf,EAAqBF,KAArB,EAA4BI,SAA5B,CAAlB;AACAA,UAAAA,SAAS,CAACa,GAAV;AACD;AACF,OAZD,MAYO,IAAIR,OAAJ,EAAa;AAClBL,QAAAA,SAAS,CAACW,IAAV,CAAe;AACbjB,UAAAA,IAAI,EAAJA,IADa;AAEbU,UAAAA,GAAG,EAAHA;AAFa,SAAf;AAIAL,QAAAA,kBAAkB,CAACM,OAAD,EAAUR,KAAV,EAAiBC,IAAjB,EAAuBF,KAAvB,EAA8BI,SAA9B,CAAlB;AACAA,QAAAA,SAAS,CAACa,GAAV;AACD;AACF;AA5B8D;AAAA;AAAA;AAAA;AAAA;;AA8B/D,MAAIf,IAAJ,EAAUA,IAAI,CAACJ,IAAD,EAAOM,SAAP,EAAkBJ,KAAlB,CAAJ;AACX","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = traverse;\n\nvar _definitions = require(\"../definitions\");\n\nfunction traverse(node, handlers, state) {\n  if (typeof handlers === \"function\") {\n    handlers = {\n      enter: handlers\n    };\n  }\n\n  const {\n    enter,\n    exit\n  } = handlers;\n  traverseSimpleImpl(node, enter, exit, state, []);\n}\n\nfunction traverseSimpleImpl(node, enter, exit, state, ancestors) {\n  const keys = _definitions.VISITOR_KEYS[node.type];\n  if (!keys) return;\n  if (enter) enter(node, ancestors, state);\n\n  for (const key of keys) {\n    const subNode = node[key];\n\n    if (Array.isArray(subNode)) {\n      for (let i = 0; i < subNode.length; i++) {\n        const child = subNode[i];\n        if (!child) continue;\n        ancestors.push({\n          node,\n          key,\n          index: i\n        });\n        traverseSimpleImpl(child, enter, exit, state, ancestors);\n        ancestors.pop();\n      }\n    } else if (subNode) {\n      ancestors.push({\n        node,\n        key\n      });\n      traverseSimpleImpl(subNode, enter, exit, state, ancestors);\n      ancestors.pop();\n    }\n  }\n\n  if (exit) exit(node, ancestors, state);\n}"]},"metadata":{},"sourceType":"script"}